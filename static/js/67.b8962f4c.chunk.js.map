{"version":3,"file":"static/js/67.b8962f4c.chunk.js","mappings":"6SACMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACFT,EAAAA,EAAAA,GAAM,4BAADU,OAA6BX,IAAW,KAAD,EAArD,OAARO,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KACrB,kBAHuB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKXC,EAAe,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAE,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAAiB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,GACdT,EAAAA,EAAAA,GAAM,UAADU,OAAWU,EAAE,aAAAV,OAAYX,IAAW,KAAD,EAAjD,OAARO,EAAQe,EAAAV,KAAAU,EAAAT,OAAA,SACPN,EAASO,MAAI,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACrB,gBAH2BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAKfO,EAAY,eAAAC,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqB,EAAML,GAAE,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,GACXT,EAAAA,EAAAA,GAAM,UAADU,OAAWU,EAAE,qBAAAV,OAAoBX,IAAW,KAAD,EAAzD,OAARO,EAAQoB,EAAAf,KAAAe,EAAAd,OAAA,SACPN,EAASO,MAAI,wBAAAa,EAAAZ,OAAA,GAAAW,EAAA,KACrB,gBAHwBE,GAAA,OAAAH,EAAAT,MAAA,KAAAC,UAAA,KAKZY,EAAS,eAAAC,GAAA1B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0B,EAAMV,GAAE,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAA2B,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,GACRT,EAAAA,EAAAA,GAAM,UAADU,OAAWU,EAAE,qBAAAV,OAAoBX,IAAW,KAAD,EAAzD,OAARO,EAAQyB,EAAApB,KAAAoB,EAAAnB,OAAA,SACPN,EAASO,MAAI,wBAAAkB,EAAAjB,OAAA,GAAAgB,EAAA,KACrB,gBAHqBE,GAAA,OAAAH,EAAAd,MAAA,KAAAC,UAAA,KAITiB,EAAiB,eAAAC,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+B,EAAMC,GAAK,IAAA9B,EAAA,OAAAF,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,GACnBT,EAAAA,EAAAA,GAAM,yBAADU,OACDX,EAAO,WAAAW,OAAU0B,IAC1C,KAAD,EAFa,OAAR9B,EAAQ+B,EAAA1B,KAAA0B,EAAAzB,OAAA,SAGPN,EAASO,MAAI,wBAAAwB,EAAAvB,OAAA,GAAAqB,EAAA,KACrB,gBAL6BG,GAAA,OAAAJ,EAAAnB,MAAA,KAAAC,UAAA,I,2GCrBjBuB,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2IAStBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oGAOpBG,EAAYL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8FAKtBK,EAAiBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iD,SCOtC,EArBkB,SAAHxC,GAAoB,IAAd+C,EAAM/C,EAAN+C,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACb,EAAU,CAAAc,SACRJ,EAAOK,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAACT,EAAQ,CAAAU,UACPG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAhD,OAAa6C,EAAMnC,IAAMuC,MAAO,CAAEC,KAAMV,GAAWG,SAAA,EACzDD,EAAAA,EAAAA,KAACP,EAAS,CACRgB,IAAG,iCAAAnD,OAAmC6C,EAAMO,aAC5CC,IAAKR,EAAMS,MACXC,MAAM,WAERb,EAAAA,EAAAA,KAACL,EAAc,CAAAM,SAAEE,EAAMS,YAPZT,EAAMnC,GASV,KAInB,C,sICxBa8C,E,OAAY1B,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oD,SCUpC,EATmB,SAAHxC,GAA6B,IAAvBiE,EAAQjE,EAARiE,SAAU/B,EAAKlC,EAALkC,MAC9B,OACEoB,EAAAA,EAAAA,MAACU,EAAS,CAACC,SAAUA,EAASd,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,OAAOC,KAAK,SAASC,aAAclC,KAC/CgB,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,qCAGd,E,yBCoCA,EAxCmB,WAAO,IAADkB,EACvBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCvB,EAAMyB,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0BT,EAAAA,EAAAA,UAAmC,QAA3BF,EAACS,EAAaG,IAAI,iBAAS,IAAAZ,EAAAA,EAAI,IAAGa,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAA7D9C,EAAKgD,EAAA,GAAEC,EAAQD,EAAA,GA6BtB,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVlD,EAAJ,CAGA,IAAMmD,EAAe,eAAArF,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAQ,EAAA,OAAAT,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEDwB,EAAAA,EAAAA,IAAkBG,GAAO,KAAD,EACnB,KADlBvB,EAAIN,EAAAI,MACL6E,QAAQC,QAAgBb,EAAU/D,EAAK2E,SAC5CE,EAAAA,GAAAA,QAAc,0DAADhF,OAAcG,EAAK2E,QAAQC,OAAM,gDAAYlF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoF,GAAApF,EAAA,SAE1DqF,QAAQC,IAAGtF,EAAAoF,IAAQ,yBAAApF,EAAAO,OAAA,GAAAT,EAAA,kBAEtB,kBARoB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KASrBuE,GAVA,CAWF,GAAG,CAACnD,KAGFoB,EAAAA,EAAAA,MAAA,QAAAH,SAAA,EACED,EAAAA,EAAAA,KAAC0C,EAAU,CAAC3B,SA7BO,SAAA4B,GACrBA,EAAMC,iBACN,IAAMC,EAAWF,EAAMG,OAAOC,SAASC,OAAOC,MAG9C,GAFAhB,EAASY,GAEQ,KAAbA,EACF,OAAOP,EAAAA,GAAAA,MAAY,gGAErBT,EAAgB,CAAEmB,OAAQH,GAC5B,EAoB0C7D,MAAOA,IAC1B,IAAlBa,EAAOwC,SAAgBrC,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CAACrD,OAAQA,MAGjD,C","sources":["api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'dc91215467161f87202b108d8a3b1132';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovies = async () => {\n  const response = await axios(`/movie/top_rated?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesByID = async id => {\n  const response = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const fetchMovieByQuery = async query => {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\n   list-style: none;\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: space-between;\n   padding: 0;\n   margin: 0;\n`;\n\nexport const ListItem = styled.li`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   margin: 12px;\n`;\n\nexport const ListImage = styled.img`\n   margin-bottom: 12px;\n   border-radius: 6px;\n   box-shadow: 0px 0px 20px grey;\n`;\nexport const MovieListTitle = styled.p`\nfont-size: 12px;\ntext-align: center;\n`;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  MoviesList,\n  ListItem,\n  ListImage,\n  MovieListTitle,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <ListImage\n              src={`http://image.tmdb.org/t/p/w200${movie.poster_path}`}\n              alt={movie.title}\n              width=\"200px\"\n            />\n            <MovieListTitle>{movie.title}</MovieListTitle>\n          </Link>\n        </ListItem>\n      ))}\n    </MoviesList>\n  );\n};\n\nexport default MovieList;\n\n","import styled from \"styled-components\";\n\n\n\nexport const MovieForm = styled.form`\nmargin-top: 40px;\n  text-align: center;\n`;","// SearchForm.jsx\nimport React from 'react';\nimport { MovieForm } from './SearchForm.styled';\n;\n\nconst SearchForm = ({ onSubmit, query }) => {\n  return (\n    <MovieForm onSubmit={onSubmit}>\n      <input type=\"text\" name=\"search\" defaultValue={query} />\n      <button>Пошук</button>\n    </MovieForm>\n  );\n};\n\nexport default SearchForm;\n","// Movies.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { fetchMovieByQuery } from 'api';\nimport toast from 'react-hot-toast';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('search') ?? '');\n\n  const onSubmitHandle = event => {\n    event.preventDefault();\n    const newQuery = event.target.elements.search.value;\n    setQuery(newQuery);\n\n    if (newQuery === '') {\n      return toast.error('Пусте поле пошуку');\n    }\n    setSearchParams({ search: newQuery });\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const getMovieByQuery = async () => {\n      try {\n        const data = await fetchMovieByQuery(query);\n        data.results.length !== 0 && setMovies(data.results);\n        toast.success(`Знайшлося ${data.results.length} фільмів`);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieByQuery();\n  }, [query]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={onSubmitHandle} query={query} />\n      {movies.length !== 0 && <MovieList movies={movies} />}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","axios","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesByID","_ref2","_callee2","id","_context2","_x","fetchReviews","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchMovieByQuery","_ref5","_callee5","query","_context5","_x4","MoviesList","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ListImage","_templateObject3","MovieListTitle","_templateObject4","movies","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","state","from","src","poster_path","alt","title","width","MovieForm","onSubmit","type","name","defaultValue","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","get","_useState4","setQuery","useEffect","getMovieByQuery","results","length","toast","t0","console","log","SearchForm","event","preventDefault","newQuery","target","elements","search","value","MovieList"],"sourceRoot":""}