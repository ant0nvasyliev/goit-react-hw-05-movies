{"version":3,"file":"static/js/387.84ba5b32.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'dc91215467161f87202b108d8a3b1132';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovies = async () => {\n  const response = await axios(`/movie/top_rated?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesByID = async id => {\n  const response = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const fetchMovieByQuery = async query => {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\nexport const CastListImg = styled.img`\n  border-radius: 6px;\n  box-shadow: 0px 0px 20px grey;\n`;\nexport const CastListName = styled.p`\ntext-align: center;\nfont-size: 18px;\n`;\nexport const CastCharacter = styled.p`\n  text-align: center;\n  font-size: 12px;\n`;\n\nexport const NotFoundMessage = styled.div`\n  text-align: center;\n  font-size: 24px;\n`;\n","import { fetchCast } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastList,\n  CastListImg,\n  CastCharacter,\n  CastListName,\n  NotFoundMessage,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const data = await fetchCast(id);\n        data.cast.length !== 0 && setActors(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [id]);\n\n  return (\n    <>\n      {actors ? (\n        <CastList>\n          {actors.map(actor => (\n            <li key={actor.id}>\n              <CastListImg\n                src={`http://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n              />\n              <CastListName>{actor.name}</CastListName>\n              <CastCharacter>{actor.character}</CastCharacter>\n            </li>\n          ))}\n        </CastList>\n      ) : (\n        <NotFoundMessage>Немає даних про акторський склад.</NotFoundMessage>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesByID","_ref2","_callee2","id","_context2","_x","fetchReviews","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchMovieByQuery","_ref5","_callee5","query","_context5","_x4","CastList","styled","_templateObject","_taggedTemplateLiteral","CastListImg","_templateObject2","CastListName","_templateObject3","CastCharacter","_templateObject4","NotFoundMessage","_templateObject5","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","useEffect","getCast","cast","length","t0","console","log","_jsx","_Fragment","children","map","actor","_jsxs","src","profile_path","alt","name","character"],"sourceRoot":""}